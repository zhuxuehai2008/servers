<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd 
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
               
       <!-- 载入配置文件 --> 
      <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations" value="classpath:application.properties"/>
      </bean>
      <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
         <constructor-arg index="0" ref="sqlSessionFactory"/>  
      </bean>
      <!-- 配置jdbc -->
	  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	  	<property name="driverClassName" value="${jdbc.driver}"/>
	  	<property name="url" value="${jdbc.url}"/>
	  	<property name="username" value="${jdbc.username}"/>
	  	<property name="password" value="${jdbc.password}"/>
	  </bean>
	<!-- 根据mybatis的配置文件 来创建sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.zxh.interfaces.entity"></property>
		<property name="mapperLocations">
			<list>
				<value>classpath:com/zxh/interfaces/mapper/*.xml</value>
				<value>classpath:mapper/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- mapper的接口和mapper的映射文件在同一个包下，并且
		mapper的接口名称和mapper的映射文件名相同
		mapper接口中的方法名称和mapper映射文件中的id的名称一致
		mapper映射文件中的namespace和mapper文件所在的包名+mapper文件名
		该类将扫描指定的包 并且通过代理生成mapper接口的实现类 生成的类的id名称为
		mapper接口首字母小写
		 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"></property> -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="com.zxh.interfaces.mapper"></property>
	</bean>
    <!-- 事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
    	<tx:attributes>
  		<!-- 表示以save开头的方法都需要事务      
  		propagation  表示事务的传播特性 
  		REQUIRED  查看当前是否有事务，如果有，使用当前事务，如果没有开启新事务 -->
  		<tx:method name="save*" propagation="REQUIRED"/>
  		<tx:method name="update*" propagation="REQUIRED"/>
  		<tx:method name="find*" read-only="true"/>
  		<tx:method name="*" propagation="REQUIRED"/>
  		</tx:attributes>
    </tx:advice>
	<!-- <bean id="mapperInterceptor" class="com.zxh.core.interceptor.MapperInterceptor" /> -->
    <aop:config>
		<!-- expression  指明事务在哪里起作用
		第一个* 表示所有返回值 
		第二个* 表示所有类
		第三个* 表示类中的所有方法
		.. 表示所有参数 -->
		<aop:pointcut expression="execution(* com.zxh.interfaces.service.*.*(..))" id="pointcut"/>
        <aop:pointcut id="insertPointCut" expression="execution(* com.zxh.interfaces.mapper..insert(..)))" />
        <!-- <aop:pointcut id="datalogUpdatePointCut" expression="execution(* com.yami.infrastructure.repository.mapper..update*(..)) &amp;&amp; !execution(* com.yami.infrastructure.repository.mapper.ActionMapper.*(..))" /> -->
        <!-- <aop:advisor advice-ref="mapperInterceptor" pointcut-ref="insertPointCut" /> -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
</beans>